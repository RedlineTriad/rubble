(function() {var implementors = {};
implementors["rubble"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandleRange","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for AttributeServer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !RefUnwindSafe for AttributeServerTx&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for Attribute&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttUuid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Beacon","synthetic":true,"types":[]},{"text":"impl&lt;C, F&gt; RefUnwindSafe for BeaconScanner&lt;C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for BytesOr&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ByteWriter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ByteReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for P256Provider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for P256SecretKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RingProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RingSecretKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedSecret","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidPublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatteryServiceAttrs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MidiServiceAttrs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatteryLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Appearance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Channel","synthetic":true,"types":[]},{"text":"impl&lt;'a, P:&nbsp;?Sized&gt; RefUnwindSafe for ChannelData&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, S&gt; RefUnwindSafe for BleChannelMap&lt;A, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; RefUnwindSafe for L2CAPState&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Sender&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, M, P&gt; RefUnwindSafe for L2CAPStateTx&lt;'a, M, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompanyId","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for Connection&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Consumer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Producer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FeatureSet","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for Responder&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Config&gt;::ChannelMapper: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Consumer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Config&gt;::PacketQueue: PacketQueue,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Producer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for LinkLayer&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Consumer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Config&gt;::PacketQueue: PacketQueue,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as Config&gt;::PacketQueue as PacketQueue&gt;::Producer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as Config&gt;::Timer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NextUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioCmd","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ServiceUuids&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AdStructure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectRequestData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PduBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Pdu&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SleepClockAccuracy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PduType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Llid","synthetic":true,"types":[]},{"text":"impl&lt;'a, L&gt; RefUnwindSafe for Pdu&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllowAll","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for WhitelistFilter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; RefUnwindSafe for AdvFilter&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for ScanFilter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionParamRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionUpdateData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ControlPdu&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlOpcode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VersionNumber","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Consume&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SimpleQueue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SimpleProducer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SimpleConsumer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdvertisingChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoSecurity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecureConnections","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for SecurityManager&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthReq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyDistribution","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IoCapabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BondingType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uuid16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uuid32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uuid128","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UuidKind","synthetic":true,"types":[]}];
implementors["rubble_nrf5x"] = [{"text":"impl RefUnwindSafe for BleRadio","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for BleTimer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for StampSource&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()