(function() {var implementors = {};
implementors["rubble"] = [{"text":"impl&lt;PRIM:&nbsp;FromBytes, T&gt; FromBytes for <a class=\"struct\" href=\"rubble/bytes/struct.Field.html\" title=\"struct rubble::bytes::Field\">Field</a>&lt;PRIM, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PRIM: FromBytes,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: FromBytes,&nbsp;</span>","synthetic":false,"types":["rubble::bytes::Field"]},{"text":"impl FromBytes for <a class=\"struct\" href=\"rubble/link/llcp/struct.ConnectionUpdateData.html\" title=\"struct rubble::link::llcp::ConnectionUpdateData\">ConnectionUpdateData</a>","synthetic":false,"types":["rubble::link::llcp::ConnectionUpdateData"]},{"text":"impl FromBytes for <a class=\"struct\" href=\"rubble/link/llcp/struct.ChannelMapReq.html\" title=\"struct rubble::link::llcp::ChannelMapReq\">ChannelMapReq</a>","synthetic":false,"types":["rubble::link::llcp::ChannelMapReq"]},{"text":"impl FromBytes for <a class=\"struct\" href=\"rubble/security/struct.PairingRequest.html\" title=\"struct rubble::security::PairingRequest\">PairingRequest</a>","synthetic":false,"types":["rubble::security::PairingRequest"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()